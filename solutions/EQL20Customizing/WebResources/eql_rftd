if (typeof (eql) == "undefined") { eql = {}; }
if (typeof (eql.Crm) == "undefined") { eql.Crm = {}; }
if (typeof (eql.Crm.WebResource) == "undefined") { eql.Crm.WebResource = {}; }


eql.Crm.WebResource.EWR = {
    
    checkRFTD: function (executionContext) {
        const formContext = executionContext.getFormContext();
        let readyfortestDate = formContext.getAttribute("eql_readyfortestdate").getValue();
                
        if (readyfortestDate !== null) {
            
            const today = new Date();
            let futuredate = today.setMonth(today.getMonth()+3);
            let formattedfuturedate = new Date(futuredate).toISOString().slice(0,10);
            let formattedrftd = new Date(readyfortestDate).toISOString().slice(0,10);

            if(formattedrftd < formattedfuturedate){
                
                let alertStrings = { confirmButtonLabel: "OK", text: "The Ready for Test Date cannot be set in the past.", title: "Invalid Ready for Test Date" };
                let alertOptions = { height: 120, width: 260 };
                Xrm.Navigation.openAlertDialog(alertStrings, alertOptions)
                formContext.ui.setFormNotification("The Ready for Test Date cannot be set in the past.","ERROR","invaliddate");
                formContext.ui.clearFormNotification("validdate");
                
            }
            else
            {
                
                let alertStrings = { confirmButtonLabel: "Confirm", text: "The Ready for Test Date selected is greater than 3 months from the current date. Please confirm that this is correct.", title: "Valid Ready for Test Date" };
                let alertOptions = { height: 120, width: 260 };
                Xrm.Navigation.openAlertDialog(alertStrings, alertOptions)
                formContext.ui.setFormNotification("The Ready for Test Date selected is greater than 3 months from the current date. Please confirm that this is correct","INFORMATION","validdate");
                formContext.ui.clearFormNotification("invaliddate");
            }

        }
    },
    onSaveRFTD: function(executionContext){
        const eventArgs = executionContext.getEventArgs();
        const formContext = executionContext.getFormContext();
        let readyfortestDate = formContext.getAttribute("eql_readyfortestdate").getValue();
           
            const today = new Date();
            let futuredate = today.setMonth(today.getMonth()+3);
            let formattedfuturedate = new Date(futuredate).toISOString().slice(0,10);
            let formattedrftd = new Date(readyfortestDate).toISOString().slice(0,10);

            if(formattedrftd < formattedfuturedate){
                eventArgs.preventDefault();
            }
  
    }
    
 
}





